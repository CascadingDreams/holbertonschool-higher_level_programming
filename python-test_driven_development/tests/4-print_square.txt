The ``print_square`` module
======================

Using ``print_square``
-------------------

Importing function from the module:
    >>> print_square = __import__('4-print_square').print_square

Test printing a 4x4 square:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test printing a 0x0 square (should print nothing):
    >>> print_square(0)

Test printing a 1x1 square:
    >>> print_square(1)
    #

Test printing a 2x2 square:
    >>> print_square(2)
    ##
    ##

Test with negative size:
    >>> print_square(-1)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

Test with float (positive):
    >>> print_square(3.5)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Test with negative float:
    >>> print_square(-3.5)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Test with string:
    >>> print_square("4")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Test with None:
    >>> print_square(None)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Test with list:
    >>> print_square([4])
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Test with no arguments:
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Test with too many arguments:
    >>> print_square(4, 5)
    Traceback (most recent call last):
        ...
    TypeError: print_square() takes 1 positional argument but 2 were given