The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Import the function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Matrix of ints:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix of floats:
    >>> matrix_divided([[1.3, 2.2, 3.3], [4.5, 5.5, 6.43]], 3)
    [[0.43, 0.73, 1.1], [1.5, 1.83, 2.14]]

Mixed ints and floats:
    >>> matrix_divided([[1.3, 2, 3.3], [4, 5, 6.43]], 3)
    [[0.43, 0.67, 1.1], [1.33, 1.67, 2.14]]

Matrix is not a list:
    >>> matrix_divided(([1.3, 2, 3.3], [4, 5, 6.43]), 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix contains non-list elements:
    >>> matrix_divided([1, "hello", 3.14, True], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix rows are not the same size:
    >>> matrix_divided([[1, 3, 5], [2, 4]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Div not a number:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'hello')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Div is equal to zero:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Div is none:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number